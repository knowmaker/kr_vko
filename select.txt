КОЛИЧЕСТВО ПОПАДАНИЙ И ПРОМАХОВ ПО КАЖДОЙ СТАНЦИИ (ЕСЛИ БЫЛ ХОТЯ БЫ ОДИН ВЫСТРЕЛ)

sqlite3 vko.db <<EOF
SELECT 
    s.name AS system_name,
    COUNT(sh.id) AS total_shots,
    SUM(CASE WHEN sh.result = 1 THEN 1 ELSE 0 END) AS hits,
    SUM(CASE WHEN sh.result = 0 THEN 1 ELSE 0 END) AS misses
FROM shooting sh
JOIN systems s ON sh.system_id = s.id
GROUP BY s.name;
EOF


ТОП СТАНЦИЙ ПО КОЛИЧЕСТВУ УНИЧТОЖЕНИЙ

sqlite3 vko.db <<EOF
SELECT 
    s.name AS system_name,
    COUNT(sh.id) AS total_hits
FROM shooting sh
JOIN systems s ON sh.system_id = s.id
WHERE sh.result = 1
GROUP BY s.name
ORDER BY total_hits DESC;
EOF

ТОП СТАНЦИЙ ПО МЕТКОСТИ (ПРОЦЕНТУ УНИЧТОЖЕНИЙ СРЕДИ ВСЕХ ВЫСТРЕЛОВ)

sqlite3 vko.db <<EOF
SELECT 
    s.name AS system_name,
    COUNT(sh.id) AS total_shots,
    SUM(CASE WHEN sh.result = 1 THEN 1 ELSE 0 END) AS hits,
    (100.0 * SUM(CASE WHEN sh.result = 1 THEN 1 ELSE 0 END) / COUNT(sh.id)) AS hit_percentage
FROM shooting sh
JOIN systems s ON sh.system_id = s.id
GROUP BY s.name
ORDER BY hit_percentage DESC;
EOF

КОЛИЧЕСТВО БП У КАЖДОЙ СТАНЦИИ

sqlite3 vko.db <<EOF
WITH last_ammo AS (
    SELECT 
        a.system_id,
        a.count AS last_count,
        a.timestamp AS last_timestamp
    FROM ammo a
    WHERE a.id = (SELECT MAX(a2.id) FROM ammo a2 WHERE a2.system_id = a.system_id)
)

SELECT 
    s.name AS system_name,
    la.last_count AS initial_ammo,
    COUNT(sh.id) AS shots_fired,
    (la.last_count - COUNT(sh.id)) AS remaining_ammo
FROM last_ammo la
JOIN systems s ON la.system_id = s.id
LEFT JOIN shooting sh 
    ON la.system_id = sh.system_id 
    AND sh.timestamp > la.last_timestamp
GROUP BY s.name, la.last_count;
EOF

КОЛИЧЕСТВО СБИТЫХ ЦЕЛЕЙ У КАЖДОЙ СТАНЦИИ ЗРДН ЗА ИНТЕРВАЛ ВРЕМЕНИ

sqlite3 vko.db <<EOF
SELECT 
    s.name AS system_name,
    COUNT(sh.id) AS total_hits
FROM shooting sh
JOIN systems s ON sh.system_id = s.id
WHERE s.name LIKE 'ЗРДН%' 
    AND sh.result = 1
    AND sh.timestamp BETWEEN '23-03 21:30:42.852' AND '23-03 21:35:00.000'
GROUP BY s.name
ORDER BY total_hits DESC;
EOF

КОЛИЧЕСТВО ЦЕЛЕЙ, НАПРАВЛЯЮЩИХСЯ В СТОРОНУ СПРО

sqlite3 vko.db <<EOF
SELECT COUNT(DISTINCT id) AS targets_moving_towards_PRO
FROM targets
WHERE direction = 1;
EOF